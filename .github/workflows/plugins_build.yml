name: Csound plugins build

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop

jobs:
  build_package:
    runs-on: ${{ matrix.os }}

    env:
      CSOUND_VERSION: 6.17.2

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, "macos-latest"]
        include:
          - os: "windows-latest"
          - os: "ubuntu-latest"
          - os: "macos-latest"

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup platform (windows)
        if: startsWith(matrix.os, 'windows')
        env:
          FAUST_URL: https://github.com/grame-cncm/faust/releases/download/2.60.3/Faust-2.60.3-win64.exe
        run: |
          Invoke-WebRequest $env:FAUST_URL -OutFile faustInstaller.exe
          ./faustInstaller.exe /S
          echo "C:/Program Files/Faust;C:/Program Files/Faust/lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:/Program Files/csound/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "OPCODE6DIR64=C:/Program Files/csound/plugins64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PYTHONPATH=C:/Program Files/csound/bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RAWWAVE_PATH=C:/Program Files/csound/samples" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          .\vcpkg\bootstrap-vcpkg.bat
          choco install csound --version=6.17.0

      - name: Setup platform (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Setup platform (macos)
        if: startsWith(matrix.os, 'macos')
        run: |
          ./vcpkg/bootstrap-vcpkg.sh
          brew install csound

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Generate CMake build
        run: cmake -B build -DUSE_VCPKG=1

      - name: Build plugins
        run: cmake --build build --config Release

      - name: Build installer (windows)
        if: startsWith(matrix.os, 'windows')
        run: iscc /o. .\installer\win64\Installer.iss

      - name: Upload installer (windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: Csound_win_x64-${{env.CSOUND_VERSION}}.${{github.run_number}}-plugins-installer
          path: ./csound6-plugins-win_x86_64-*.exe
          if-no-files-found: error
